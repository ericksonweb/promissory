@use "sass:color";
@use "../1_settings/colors";
@use "../1_settings/spacing" as *;
@use "../1_settings/transition" as *;
@use "../2_tools/resets";

.card {
  position: relative;
  display: flex;
  width: 100%;
  flex-wrap: wrap;
  border: 1px solid;
  border-color: var(--esl-color-medium-grey);
  
  &__media,
  &__content > * {
    padding: $spacing--half + 0rem;
  }
  
  &__media {
    &--flush {
      @include resets.padding;      
    }
  }
  
  &__content {
    flex: 10;
    //display: flex;
    flex-wrap: wrap;
    align-items: center;
    max-width: 100%;
  }
  
  &__body {
    min-width: 20ch;
    flex-basis: 70%;
    flex-grow: 1;
  }
  
  &__header,
  &__footer {
    display: flex;
    width: 100%;
  }
  
  &__link {
    position: absolute;
    top: -1px;
    right: -1px;
    bottom: -1px;
    left: -1px;
    z-index: 1;
    border: 1px solid;
    border-color: transparent;
    transition: $transition;
    transition-property: box-shadow, background-color, border-color;
    
    &:hover {
      border-color: var(--esl-color-aqua-blue);
      box-shadow: 0 0 ($spacing--half + 0rem) color.adjust(colors.$charcoal, $alpha: -0.75);
      
      & ~ .card__content .btn {
        background-color: var(--esl-color-aqua-blue);
        color: var(--esl-color-white);
      }
    }
    
    & ~ .card__content {
      position: relative;
      z-index: 2;
      pointer-events: none;
      
      a:not(.btn) {
        position: relative;
        z-index: 2;
        pointer-events: all;
      }
    }
  }
      
  &--dark {
    border-color: transparent;
    background-color: var(--esl-color-light-grey);
    transition: $transition;
    transition-property: background-color;
    
    & .card__link:hover {
      background-color: color.adjust(colors.$charcoal, $alpha: -0.85);
    }
  }
  
  &--horizontal {
    & .card__media,
    & .card__header,
    & .card__footer {
      width: auto;
      flex-grow: 1;
    }
    & .card__content {
      display: flex;
      flex: 10000;
    }
  }
  
}
