function e(e,n={}){return r=this,s=void 0,l=function*(){if(!(e instanceof Element||e instanceof Window))throw new Error(`element passed to scrollTo() must be either the window or a DOM element, you passed ${e}!`);n=o(n);const r=(n,o,i,s,c=300,l,u)=>{window.requestAnimationFrame(()=>{const a=Date.now(),d=Math.min(1,(a-s)/c);if(n===o)return u?u():null;!function(e,n){const o=t.getDocument();e===o.body||e===o.documentElement||e instanceof Window?(o.body.scrollTop=n,o.documentElement.scrollTop=n):e.scrollTop=n}(e,l(d)*(o-n)+n),d<1?r(n,o,i,s,c,l,u):u&&u()})},s=function(e){const n=t.getDocument();return e===n.body||e===n.documentElement||e instanceof Window?n.body.scrollTop||n.documentElement.scrollTop:e.scrollTop}(e),c=function(e){const n={window:{y:"scrollY",x:"scrollX"},element:{y:"scrollTop",x:"scrollLeft"}};return e instanceof Window?n.window.y:n.element.y}(e);return new Promise(e=>{r(s,"number"==typeof n.top?n.top:s,c,Date.now(),n.duration,i(n.easing),e)})},new((c=void 0)||(c=Promise))(function(e,n){function o(e){try{i(l.next(e))}catch(e){n(e)}}function t(e){try{i(l.throw(e))}catch(e){n(e)}}function i(n){n.done?e(n.value):new c(function(e){e(n.value)}).then(o,t)}i((l=l.apply(r,s||[])).next())});var r,s,c,l}function n(n,r,i){!function(e){if(void 0===e){throw new Error("The element passed to scrollIntoView() was undefined.")}if(!(e instanceof HTMLElement))throw new Error(`The element passed to scrollIntoView() must be a valid element. You passed ${e}.`)}(n),!r||r instanceof Element||(i=r,r=void 0);const{duration:s,easing:c}=o(i);r=r||t.getDocument().body;let l=0,u=n?n.offsetTop:0;const a=t.getDocument();return r!==a.body&&r!==a.documentElement||(l=window.pageYOffset,u=n.getBoundingClientRect().top+l),e(r,{top:u,left:0,duration:s,easing:c})}function o(e={}){return"smooth"===e.behavior&&(e.easing="ease-in-out",e.duration=300),"auto"===e.behavior&&(e.duration=0,e.easing="linear"),e}const t={getDocument:()=>document},r={linear:e=>e,"ease-in":e=>e*e,"ease-out":e=>e*(2-e),"ease-in-out":e=>e<.5?2*e*e:(4-2*e)*e-1},i=e=>{const n=r[e||"linear"];if(!n){const n=Object.keys(r).join(",");throw new Error(`Scroll error: scroller does not support an easing option of "${e}". Supported options are ${n}`)}return n};export{r as easingMap,n as scrollIntoView,e as scrollTo,t as utils};
